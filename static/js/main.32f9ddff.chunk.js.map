{"version":3,"sources":["components/Context/auth-context.js","pages/signup.js","pages/login.js","pages/dashboard.js","components/Room/ChatRoom.js","components/UserBar/UserBar.js","components/Message/Message.js","components/Messages/Messages.js","components/InputBar/InputBar.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","username","userId","login","logout","SignupPage","props","state","submitted","submitHandler","event","a","preventDefault","usernameEl","current","value","password","passwordEl","body","fetch","method","JSON","stringify","headers","response","console","log","json","Json","localStorage","setItem","context","setState","createRef","this","to","className","onSubmit","htmlFor","type","id","ref","Component","contextType","AuthContext","LoginPage","status","Dashboard","rooms","createHandler","getItem","roomname","roomnameEl","name","Authorization","createdRoom","window","location","href","addedRoom","roomId","_id","roomName","lastMessage","messages","length","prevState","joinHandler","roomidEl","joinedRoom","error","displayRooms","render","request","Request","room","filter","item","map","val","index","usrnm","msg","text","style","marginBottom","onClick","deleteRoom","bind","clear","float","marginTop","paddingLeft","placeholder","required","listRooms","socket","rId","UserBar","users","user","Message","message","Messages","containerRef","i","InputBar","setMessage","sendMessage","onChange","target","onKeyPress","key","e","ChatRoom","emit","scrollToBottom","newMessage","messagesContainerRef","path","pathname","split","io","autoConnect","connect","alert","on","getUsersData","getRoomData","ok","container","scrollTop","scrollHeight","mainNavigation","Consumer","App","removeItem","storedToken","storedUsername","storedUserId","Fragment","Provider","from","exact","component","HomePage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32f9ddff.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n  token: null,\n  username: null,\n  userId: null,\n  login: (token, userId) => {},\n  logout: () => {}\n});\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport './Auth.css';\nimport AuthContext from '../components/Context/auth-context';\n\nclass SignupPage extends Component {\n  static contextType = AuthContext;\n\n  state = {\n    submitted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.usernameEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  submitHandler = async (event) => {\n    event.preventDefault();\n    const username = this.usernameEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    // if not proper string, then return\n\n    const body = {\n      username: username,\n      password: password\n    };\n\n    const response = await fetch(\n      'https://sendit-production.up.railway.app/user/signup',\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    console.log(response);\n    const Json = await response.json();\n    console.log(Json);\n    localStorage.setItem('token', Json.token);\n    this.context.login(Json.token, Json.username, Json.userId);\n    this.setState({ submitted: true });\n  };\n\n  render() {\n    if (this.state.submitted) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"username\" id=\"username\" ref={this.usernameEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n        <div>\n          <Link to=\"/user/login\">back to login</Link>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport './Auth.css';\nimport AuthContext from '../components/Context/auth-context';\n\nclass LoginPage extends Component {\n  static contextType = AuthContext;\n\n  state = {\n    submitted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.usernameEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  submitHandler = async (event) => {\n    event.preventDefault();\n    const username = this.usernameEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    // if username or password not proper string, then return\n\n    const body = {\n      username: username,\n      password: password\n    };\n\n    const response = await fetch(\n      'https://sendit-production.up.railway.app/user/login',\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    const Json = await response.json();\n    console.log(Json);\n\n    if (response.status === 200) {\n      localStorage.setItem('token', Json.token);\n      this.context.login(Json.token, Json.username, Json.userId);\n      this.setState({ submitted: true });\n    }\n  };\n\n  render() {\n    if (this.state.submitted) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"username\" id=\"username\" ref={this.usernameEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n        <div>\n          <Link to=\"/user/signup\">signup</Link>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './dashboard.css';\nimport AuthContext from '../components/Context/auth-context';\n\nclass Dashboard extends Component {\n  static contextType = AuthContext;\n\n  state = {\n    rooms: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.roomnameEl = React.createRef();\n    this.roomidEl = React.createRef();\n\n    this.displayRooms();\n    this.render();\n  }\n\n  async displayRooms() {\n    const token = localStorage.getItem('token');\n\n    let request = new Request(\n      'https://sendit-production.up.railway.app/dashboard',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }\n    );\n    // console.log(request);\n    const response = await fetch(request);\n    const Json = await response.json();\n\n    if (response.status === 401) {\n      window.location.href = '/user/login';\n      return;\n    } else {\n      this.setState({ rooms: Json.rooms });\n      // console.log(this.state.rooms);\n    }\n  }\n\n  createHandler = async (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem('token');\n    const roomname = this.roomnameEl.current.value;\n\n    // if not proper string, then return\n\n    const body = {\n      name: roomname\n    };\n\n    const response = await fetch(\n      'https://sendit-production.up.railway.app/room/create',\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }\n    );\n    const Json = await response.json();\n    console.log(Json.createdRoom);\n\n    if (response.status === 401) {\n      window.location.href = '/user/login';\n      return;\n    }\n\n    const addedRoom = {\n      roomId: Json.createdRoom._id,\n      roomName: Json.createdRoom.name,\n      lastMessage: null\n    };\n\n    if (Json.createdRoom.messages.length > 0) {\n      addedRoom.lastMessage =\n        Json.createdRoom.messages[Json.createdRoom.messages.length - 1];\n    } else {\n      addedRoom.lastMessage = 'No messages';\n    }\n    this.setState((prevState) => {\n      return {\n        rooms: [...prevState.rooms, addedRoom]\n      };\n    });\n  };\n\n  joinHandler = async (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem('token');\n    const roomId = this.roomidEl.current.value;\n\n    // if not proper string, then return\n\n    const body = {\n      id: roomId\n    };\n\n    const response = await fetch(\n      'https://sendit-production.up.railway.app/room/join',\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }\n    );\n    const Json = await response.json();\n    console.log(Json);\n\n    if (response.status === 401) {\n      window.location.href = '/user/login';\n      return;\n    }\n\n    console.log(Json.joinedRoom);\n    if (Json.error) {\n      return;\n    }\n\n    const addedRoom = {\n      roomId: Json.joinedRoom._id,\n      roomName: Json.joinedRoom.name,\n      lastMessage: null\n    };\n\n    if (Json.joinedRoom.messages.length > 0) {\n      addedRoom.lastMessage =\n        Json.joinedRoom.messages[Json.joinedRoom.messages.length - 1];\n    } else {\n      addedRoom.lastMessage = 'No messages';\n    }\n\n    this.setState((prevState) => {\n      return {\n        rooms: [...prevState.rooms, addedRoom]\n      };\n    });\n  };\n\n  async deleteRoom(room) {\n    let rooms = this.state.rooms.filter((item) => item !== room);\n    this.setState({ rooms: rooms });\n\n    const token = localStorage.getItem('token');\n    const response = await fetch(\n      `https://sendit-production.up.railway.app/room/${room.roomId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }\n    );\n\n    if (response.status === 401) {\n      window.location.href = '/user/login';\n      return;\n    }\n  }\n\n  listRooms() {\n    let rooms = this.state.rooms;\n    // console.log(this.state.rooms);\n    return (\n      <ul>\n        {rooms.map((val, index) => {\n          let usrnm;\n          let msg;\n\n          if (!val.lastMessage.username) {\n            usrnm = '';\n            msg = 'No messages';\n          } else {\n            usrnm = val.lastMessage.username + ' ->';\n            msg = val.lastMessage.text;\n          }\n\n          return (\n            <div key={index}>\n              <div className=\"room-component\">\n                <Link className=\"room-link\" to={`/room/${val.roomId}`}>\n                  <h1 style={{ marginBottom: '0.5rem' }}>{val.roomName}</h1>\n                </Link>\n                <button\n                  value=\"Delete\"\n                  onClick={this.deleteRoom.bind(this, val)}\n                >\n                  Delete Room\n                </button>\n              </div>\n              <div className=\"lastMessage\" style={{ clear: 'both' }}>\n                <h3 style={{ float: 'left', marginTop: '0' }}>{usrnm}</h3>\n                <h3\n                  className=\"message\"\n                  style={{ float: 'left', paddingLeft: '10px', marginTop: '0' }}\n                >\n                  {msg}\n                </h3>\n              </div>\n            </div>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"create-room-form\" onSubmit={this.createHandler}>\n          <div className=\"create-room\">\n            <label htmlFor=\"roomname\">Room Name</label>\n            <input\n              type=\"roomname\"\n              id=\"roomname\"\n              placeholder=\"Room name\"\n              ref={this.roomnameEl}\n              required\n            />\n            <button type=\"submit\">Create New Room</button>\n          </div>\n        </form>\n        <form className=\"create-room-form\" onSubmit={this.joinHandler}>\n          <div className=\"join-room\">\n            <label htmlFor=\"roomid\">Room ID</label>\n            <input\n              type=\"roomid\"\n              id=\"roomid\"\n              placeholder=\"Room id\"\n              ref={this.roomidEl}\n              required\n            />\n            <button type=\"submit\">Join Room</button>\n          </div>\n        </form>\n        <div className=\"room-display\">\n          <div>{this.listRooms()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component, createRef } from 'react';\nimport io from 'socket.io-client';\n\nimport './ChatRoom.css';\n\nimport UserBar from '../UserBar/UserBar';\nimport Messages from '../Messages/Messages';\nimport InputBar from '../InputBar/InputBar';\n\nlet socket;\nlet rId;\n\nclass ChatRoom extends Component {\n  state = {\n    room: null,\n    user: null,\n    users: null,\n    message: '',\n    token: localStorage.getItem('token')\n  };\n\n  constructor(props) {\n    super(props);\n    this.messagesContainerRef = createRef();\n    const path = window.location.pathname.split('/');\n    const roomId = path[path.length - 1];\n    rId = roomId;\n\n    let URL = 'localhost:3000';\n    socket = io(URL, { autoConnect: false });\n    socket.connect();\n\n    socket.emit('join', { token: this.state.token, roomId }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    socket.on('message', (message) => {\n      this.setState((prevState) => {\n        const updatedRoom = {\n          ...prevState.room,\n          messages: [...(prevState.room?.messages || []), message]\n        };\n\n        return { room: updatedRoom };\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getUsersData(rId);\n    this.getRoomData(rId);\n  }\n\n  async getRoomData(roomId) {\n    const response = await fetch(\n      `https://sendit-production.up.railway.app/room/${roomId}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.state.token\n        }\n      }\n    );\n\n    if (response.ok) {\n      const Json = await response.json();\n      this.setState({ room: Json });\n    } else if (response.status === 401) {\n      window.location.href = '/user/login';\n    }\n  }\n\n  async getUsersData(roomId) {\n    const response = await fetch(\n      `https://sendit-production.up.railway.app/user/users?roomId=${roomId}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.state.token\n        }\n      }\n    );\n\n    if (response.ok) {\n      const Json = await response.json();\n      if (Json.users.length > 0) this.setState({ users: Json.users });\n    } else if (response.status === 401) {\n      window.location.href = '/user/login';\n    }\n  }\n\n  sendMessage = (event) => {\n    event.preventDefault();\n\n    if (this.state.message) {\n      socket.emit('send message', this.state.message, this.state.room._id);\n    }\n    this.setMessage('');\n    this.scrollToBottom();\n  };\n\n  setMessage = (newMessage) => {\n    this.setState({ message: newMessage });\n  };\n\n  scrollToBottom() {\n    if (this.messagesContainerRef.current) {\n      const container = this.messagesContainerRef.current;\n      container.scrollTop = container.scrollHeight;\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    return (\n      <div className=\"outerContainer\">\n        <div className=\"container\">\n          <Messages\n            messages={this.state.room?.messages || []}\n            containerRef={this.messagesContainerRef}\n          />\n          <InputBar\n            message={this.state.message}\n            setMessage={this.setMessage}\n            sendMessage={this.sendMessage}\n          />\n        </div>\n        <div className=\"align-items-end\"></div>\n        <div className=\"sideBar\">\n          <div className=\"joinCode\">\n            <h1>Join Code:</h1>\n            <h2>{rId}</h2>\n          </div>\n          <UserBar users={this.state.users} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatRoom;\n","import React from 'react';\n\nimport './UserBar.css';\n\nconst UserBar = ({ users }) => {\n  return (\n    <div className=\"UserBar\">\n      {users ? (\n        <div>\n          <h1>Members</h1>\n          <div className=\"activeContainer\">\n            <h2>\n              {users.map((user) => (\n                <div key={user?._id} className=\"activeItem\">\n                  {user?.username}\n                </div>\n              ))}\n            </h2>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UserBar;\n","import React from 'react';\n\nimport './Message.css';\n\nconst Message = ({ message: { text, username } }) => {\n  return (\n    <div className=\"messageContainer\">\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText colorDark\">{text}</p>\n      </div>\n      <p className=\"sentText pl-10 \">{username}</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\n\nimport Message from '../Message/Message';\n\nimport './Messages.css';\n\nconst Messages = ({ messages, containerRef }) => {\n  return (\n    <div className=\"messages\" ref={containerRef}>\n      {messages.map((message, i) => (\n        <Message key={i} message={message} />\n      ))}\n    </div>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\n\nimport './InputBar.css';\n\nconst InputBar = ({ setMessage, sendMessage, message }) => (\n  <form className=\"form\">\n    <input\n      className=\"input\"\n      type=\"textarea\"\n      placeholder=\"Type a message...\"\n      value={message}\n      onChange={({ target: { value } }) => setMessage(value)}\n      onKeyPress={(event) =>\n        event.key === 'Enter' ? sendMessage(event) : null\n      }\n    />\n    <button className=\"sendButton\" onClick={(e) => sendMessage(e)}>\n      Send\n    </button>\n  </form>\n);\n\nexport default InputBar;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './MainNavigation.css';\nimport AuthContext from '../Context/auth-context';\n\nconst mainNavigation = () => {\n  return (\n    <AuthContext.Consumer>\n      {(context) => {\n        console.log(context);\n        return (\n          <div className=\"main\">\n            <header className=\"main-navigation\">\n              <div className=\"main-navigation__logo\">\n                <h1>sendit</h1>\n              </div>\n              <nav className=\"main-navigation__items\">\n                <ul>\n                  {!context.token && (\n                    <>\n                      <li>\n                        <NavLink to=\"/user/login\">Login</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to=\"/user/signup\">Signup</NavLink>\n                      </li>\n                    </>\n                  )}\n                  {context.token && (\n                    <>\n                      <li>\n                        <NavLink to=\"/home\">Dashboard</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to=\"/user/login\" onClick={context.logout}>\n                          Logout\n                        </NavLink>\n                      </li>\n                    </>\n                  )}\n                </ul>\n              </nav>\n            </header>\n          </div>\n        );\n      }}\n    </AuthContext.Consumer>\n  );\n};\n\nexport default mainNavigation;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport SignupPage from './pages/signup';\nimport LoginPage from './pages/login';\nimport HomePage from './pages/dashboard';\nimport ChatRoom from './components/Room/ChatRoom';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './components/Context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    username: null,\n    userId: null\n  };\n\n  componentDidMount() {\n    const storedToken = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    const storedUserId = localStorage.getItem('userId');\n\n    if (storedToken && storedUsername && storedUserId) {\n      this.setState({\n        token: storedToken,\n        username: storedUsername,\n        userId: storedUserId\n      });\n    }\n  }\n\n  login = (token, username, userId) => {\n    this.setState({ token, username, userId }, () => {\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('userId', userId);\n    });\n  };\n\n  logout = () => {\n    this.setState({ token: null, username: null, userId: null }, () => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n    });\n  };\n\n  render() {\n    return (\n      <HashRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              username: this.state.username,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                <Redirect from=\"/\" to=\"/user/login\" exact />\n                <Route path=\"/user/signup\" component={SignupPage} />\n                <Route path=\"/user/login\" component={LoginPage} />\n                <Route path=\"/home\" component={HomePage} />\n                <Route path=\"/room\" component={ChatRoom} />\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}